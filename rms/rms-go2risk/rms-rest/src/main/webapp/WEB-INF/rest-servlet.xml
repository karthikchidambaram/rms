<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
			http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
			http://www.springframework.org/schema/security
			http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<description>
		Spring application context for web MVC.
	</description>

	<!-- Specify path to scan for annotations -->
	<context:component-scan base-package="com.i2g.rms" />

	<!-- Enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<security:global-method-security pre-post-annotations="enabled"/>
	
	<!-- <jpa:auditing auditor-aware-ref="com.i2g.rms.service.auditor.SpringSecurityAuditorAware" /> -->
	
	<!-- Directive to scan for Spring MVC annotations -->
	<mvc:annotation-driven>

		<mvc:message-converters>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper" ref="customObjectMapper" />
			</bean>
		</mvc:message-converters>

		<!-- Ensure that Spring Data Querydsl predicate arguments are resolved -->
		<mvc:argument-resolvers>
			<bean class="org.springframework.data.web.querydsl.QuerydslPredicateArgumentResolver">
				<constructor-arg>
					<bean class="org.springframework.data.querydsl.binding.QuerydslBindingsFactory">
						<constructor-arg>
							<value type="org.springframework.data.querydsl.SimpleEntityPathResolver">INSTANCE</value>
						</constructor-arg>
					</bean>
				</constructor-arg>
				<constructor-arg ref="formattingConversionService" />
			</bean>
			<bean id="sortArgResolver" class="org.springframework.data.web.SortHandlerMethodArgumentResolver" />
			<bean id="pageableArgResolver" class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" />
		</mvc:argument-resolvers>

	</mvc:annotation-driven>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the several properties available; the maximum file size in bytes (10 mb) -->
        <property name="maxUploadSizePerFile" value="10485760"/>
    </bean>
 
    <mvc:resources mapping="/**" location="/" />
	
	<mvc:default-servlet-handler/>
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename">
            <value>messages</value>
        </property>
    </bean>
    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/views/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

	<!-- MVC Interceptor to disable caching of requests for all controllers -->
	<mvc:interceptors>
		
		<!-- Interceptor to bind the HTTP response to the current thread -->
		<bean class="com.i2g.rms.rest.search.ResponseHandlerInterceptor" />
		<!-- Interceptor to set caching headers -->
		<bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
		</bean>

	</mvc:interceptors>

	<!-- Import rms-persistence application context into the main servlet context here -->
	<import resource="classpath*:/spring/applicationContext.xml" />
	
	<!-- Dozer Mapping to map models between layers -->
	<bean id="modelMapper" class="org.dozer.spring.DozerBeanMapperFactoryBean">
		<property name="mappingFiles" value="classpath*:/dozer/*Mappings.xml" />
	</bean>

	<!-- Mapping service backed by Dozer for converting REST objects -->
	<bean id="dozerMapperService" class="com.i2g.rms.rest.mapping.DozerMapperService" />

	<!-- Jackson Object mapper for converting to/from JSON -->
	<bean id="customObjectMapper" class="com.i2g.rms.rest.mapping.CustomObjectMapper" />

	<!-- Conversion Factory for conversions/formatting of common data types -->
	<bean id="formattingConversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />

	<!-- Spring data bean to convert entities to projections. -->
	<bean id="projectionFactory" class="org.springframework.data.projection.SpelAwareProxyProjectionFactory" />

	<!-- Enable Spring AOP proxying -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<property name="proxyTargetClass" value="true" />
	</bean>	
		
</beans>