<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- JNDI Connection Pool -->
	<!-- DataSource for the RMS Oracle database (defined in JBoss EAP 7) -->
	<!-- <jee:jndi-lookup id="dataSource" jndi-name="#{ systemProperties[T(com.i2g.rms.persistence.PersistenceConstants).RMS_JDBC_POOL] 
		}" /> -->

	<!-- Connection pool using apache -->
	<!-- DBCP configuration -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="scott" />
		<property name="password" value="tiger" />
		<property name="removeAbandoned" value="true" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="10" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="entityInterceptor">
			<!-- Set the interceptor to add audit information to database -->
			<bean class="com.i2g.rms.domain.support.AuditInterceptor"/>
		</property>
		<property name="mappingLocations" value="classpath*:hibernate/*.hbm.xml" />
		<property name="packagesToScan" value="com.i2g.rms.**" />
		
		<!-- Custom Second Level Cache -->
		<!-- <property name="cacheRegionFactory" ref="ehcacheRegionFactory"/> -->
		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.jdbc.batch_size">3</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				
				<!-- Properties for second level cache -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="net.sf.ehcache.configurationResourceName">/ehcache.xml</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
				<!-- <prop key="net.sf.ehcache.configurationResourceName">/rms-customEhcache.xml</prop>
				<prop key="hibernate.cache.region.factory_class">com.i2g.rms.persistence.support.EhcacheBeanRegionFactory</prop> -->
				
			</props>
		</property>
	</bean>
	
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:shared="true"/>
	
	<!-- Main transaction manager for Hibernate -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<qualifier value="rms" />
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- Enable annotation configuration -->
	<context:annotation-config />

	<!-- Specify path to scan for annotations -->
	<context:component-scan base-package="com.i2g.rms.persistence.**" />

	<!-- Enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Ensure EntityManager is available to the JPA TransactionManager for 
		JPA based persistence annotations. -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

</beans>  